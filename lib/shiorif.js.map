{"version":3,"sources":["lib/shiorif.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","exports","window","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","require","ShioriJK","ShioriTransaction","EventEmitter","Shiorif","_EventEmitter","shiori","auto_convert_request_version","arguments","undefined","this","_this","getPrototypeOf","_shiori","_request_parser","Shiori","Request","Parser","_response_parser","Response","dirpath","_this2","emit","load","then","status","StatusError","_request","_this3","convert","transaction","request","Message","parse","use_request","to","name","default_headers","headers","header","response","method","id","request_line","version","request3","_this4","unload","get","_auto_convert_request_version","set","_default_headers","_Error","apply","Error"],"mappings":"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","file":"lib/shiorif.js","sourcesContent":["/* for browser */\nif (typeof require !== 'undefined') {\n  var ShioriJK = require('shiorijk');\n  var ShioriTransaction = require('shiori_transaction').ShioriTransaction;\n  var EventEmitter = require('eventemitter3');\n}\n\n/**\n * The convenient SHIORI Shared Library Interface\n */\nexport class Shiorif extends EventEmitter {\n  /**\n   * @param {Shiori} shiori - The instance of SHIORI Shared Library Interface\n   * @param {string} auto_convert_request_version - requests will be converted to this version\n   * @return {Shiorif} this\n   */\n  constructor(shiori, auto_convert_request_version = '2.6') {\n    super();\n    this._shiori = shiori;\n    this.auto_convert_request_version = auto_convert_request_version;\n    this._request_parser = new ShioriJK.Shiori.Request.Parser();\n    this._response_parser = new ShioriJK.Shiori.Response.Parser();\n  }\n\n  /**\n   * shiori\n   * @return {Shiori} shiori\n   */\n  get shiori() {\n    return this._shiori;\n  }\n\n  /**\n   * requests will be converted to this version\n   * @return {string} version\n   */\n  get auto_convert_request_version() {\n    return this._auto_convert_request_version;\n  }\n\n  /**\n   * requests will be converted to this version\n   * @param {string} version - version\n   * @return {string} version\n   */\n  set auto_convert_request_version(version) {\n    this._auto_convert_request_version = version;\n  }\n\n  /**\n   * default headers\n   * @return {Object<string, string>} headers\n   */\n  get default_headers() {\n    return this._default_headers;\n  }\n\n  /**\n   * default headers\n   * @param {Object<string, string>} headers - headers\n   * @return {Object<string, string>} headers\n   */\n  set default_headers(headers) {\n    this._default_headers = headers;\n  }\n\n  /**\n   * SHIORI/2.x/3.x load()\n   *\n   * this emits load(dirpath), loaded(status) events.\n   * @param {string} dirpath - The directory that SHIORI Shared Library is placed. The end character of dirpath must be the path separator (/ or \\\\).\n   * @returns {Promise<number>} The status code\n   */\n  load(dirpath) {\n    this.emit('load', dirpath);\n    return this.shiori.load(dirpath).then((status) => {\n      this.emit('loaded', status);\n      if (!status) throw new Shiorif.StatusError();\n      return status;\n    });\n  }\n\n  /**\n   * SHIORI/2.x/3.x request()\n   *\n   * this emits request(request), response(response) events.\n   * @param {string|ShioriJK.Message.Request} request - The SHIORI Request\n   * @param {boolean} convert - enable auto request version convert\n   * @returns {Promise<ShioriTransaction>} The SHIORI request transaction\n   */\n  request(request, convert = true) {\n    const transaction = new ShioriTransaction();\n    transaction.request = request instanceof ShioriJK.Message.Request\n      ? request : this._request_parser.parse(request);\n    this.emit('request', transaction);\n    const use_request = convert\n      ? transaction.request.to(this.auto_convert_request_version)\n      : transaction.request;\n    for (const name in this.default_headers) {\n      if (use_request.headers.header[name] != null) {\n        use_request.headers.header[name] = this.default_headers[name];\n      }\n    }\n    return this.shiori.request(use_request)\n      .then((response) => {\n        transaction.response = this._response_parser.parse(response);\n        this.emit('response', transaction);\n        return transaction;\n      });\n  }\n\n  /**\n   * SHIORI/2.x/3.x request() by SHIORI/3.x request value\n   * @param {string} method - method\n   * @param {string} id - id\n   * @param {Object<string, string>} headers - headers\n   * @param {boolean} convert - enable auto request version convert\n   * @returns {Promise<ShioriTransaction>} The SHIORI request transaction\n   */\n  request3(method, id, headers, convert = true) {\n    const request = new ShioriJK.Message.Request({\n      request_line: {\n        version: '3.0',\n        method: method,\n      },\n      headers: headers,\n    });\n    return this.request(request, convert);\n  }\n\n  /**\n   * SHIORI/2.x/3.x request() by SHIORI/2.x request value\n   * @param {string} method - method\n   * @param {string} id - id\n   * @param {Object<string, string>} headers - headers\n   * @param {boolean} convert - enable auto request version convert\n   * @returns {Promise<ShioriTransaction>} The SHIORI request transaction\n   */\n  request2(method, id, headers, convert = true) {\n    const request = new ShioriJK.Message.Request({\n      request_line: {\n        version: '2.6',\n        method: method,\n      },\n      headers: headers,\n    });\n    return this.request(request, convert);\n  }\n\n  /**\n   * SHIORI/2.x/3.x request() by GET SHIORI/3.x request value\n   * @param {string} id - id\n   * @param {Object<string, string>} headers - headers\n   * @param {boolean} convert - enable auto request version convert\n   * @returns {Promise<ShioriTransaction>} The SHIORI request transaction\n   */\n  get3(id, headers, convert = true) {\n    return this.request3('GET', id, headers, convert);\n  }\n\n  /**\n   * SHIORI/2.x/3.x request() by NOTIFY SHIORI/3.x request value\n   * @param {string} id - id\n   * @param {Object<string, string>} headers - headers\n   * @param {boolean} convert - enable auto request version convert\n   * @returns {Promise<ShioriTransaction>} The SHIORI request transaction\n   */\n  notify3(id, headers, convert = true) {\n    return this.request3('NOTIFY', id, headers, convert);\n  }\n\n  /**\n   * SHIORI/2.x/3.x unload()\n   *\n   * this emits unload(), unloaded(status) events.\n   * @returns {Promise<number>} The status code\n   */\n  unload() {\n    this.emit('unload');\n    return this.shiori.unload().then((status) => {\n      this.emit('unloaded', status);\n      if (!status) throw new Shiorif.StatusError();\n      return status;\n    });\n  }\n}\n\nShiorif.StatusError = class StatusError extends Error {\n};\n"],"sourceRoot":"/source/"}